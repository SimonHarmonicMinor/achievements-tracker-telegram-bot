plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
    id 'checkstyle'
    id 'pmd'
}

group = 'com.kirekov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

pmd {
    consoleOutput = true
    toolVersion = "6.31.0"
    ignoreFailures = false
    ruleSets = []
}

pmdMain {
    ruleSetFiles = files("codestyle/pmd_main.xml")
}

pmdTest {
    ruleSetFiles = files("codestyle/pmd_test.xml")
}

task runStaticAnalysis(dependsOn: [checkstyleMain, checkstyleTest, pmdMain, pmdTest])

checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    showViolations = true
    toolVersion = '8.42'
}

checkstyleMain {
    configFile = file('codestyle/checkstyle_main.xml')
}

checkstyleTest {
    configFile = file('codestyle/checkstyle_test.xml')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.github.xabgesagtx:telegram-spring-boot-starter:0.25'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:mysql:1.16.2"
    testImplementation "org.testcontainers:junit-jupiter:1.16.2"
    testImplementation 'org.awaitility:awaitility:3.0.0'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "SimonHarmonicMinor_achievements-tracker-telegram-bot"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}